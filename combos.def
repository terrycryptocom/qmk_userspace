// Copyright 2023 Terry Young (@terryyounghk)
// SPDX-License-Identifier: GPL-3.0-or-later

// When defining combos that involve multi-role keys,
// use the full name of the multi-role key (i.e. the TY_* alias),
// not just its tap keycode (i.e. KY_* keycode)


// adjacent two-key combos (ordered by row-column)

    /// horizontal...

    /* QW   **/ COMB(ADJ_QW,            G(KC_Q),                        TY_Q,     TY_W) //*/
    /* WE   **/ COMB(ADJ_WE,            G(KC_W),                        TY_W,     TY_E) //*/
    /* ER ****/ SUBS(ADJ_ER,            "testing",                      TY_E,     TY_R) //*/
    /* RT   **/ COMB(ADJ_RT,            G(KC_R),                        TY_R,     TY_T) //*/
    /* ER     / COMB(ADJ_ER,            arg,                            TY_E,     TY_R) //*/
    /* YU   **/ COMB(ADJ_YU,            G(KC_Y),                        TY_Y,     TY_U) //*/
    /* UI     / COMB(ADJ_UI,            arg,                            TY_U,     TY_I) //*/
    /* IO     / COMB(ADJ_IO,            arg,                            TY_I,     TY_O) //*/
    /* OP     / COMB(ADJ_OP,            arg,                            TY_O,     TY_P) //*/
    /* AS     / COMB(ADJ_AS,            arg,                            TY_A,     TY_S) //*/
    /* SD   **/ COMB(ADJ_SD,            KC_ENT,                         TY_S,     TY_D) //*/
    /* DF     / COMB(ADJ_DF,            arg,                            TY_D,     TY_F) //*/
    /* FG   **/ COMB(ADJ_FG,            KC_BSPC,                        TY_F,     TY_G) //*/
    /* HJ   **/ COMB(ADJ_HJ,            KC_BSPC,                        TY_H,     TY_J) //*/
    /* JK   **/ COMB(ADJ_JK,            KC_ESC,                         TY_J,     TY_K) //*/
    /* KL   **/ COMB(ADJ_KL,            KC_DEL,                         TY_K,     TY_L) //*/
    /* L;   **/ COMB(ADJ_LSCLN,         KC_QUOT,                        TY_L,     TY_SCLN) //*/
    /* ZX   **/ COMB(ADJ_ZX,            G(KC_Z),                        TY_Z,     TY_X) //*/
    /* XC   **/ COMB(ADJ_XC,            G(KC_X),                        TY_X,     TY_C) //*/
    /* CV   **/ COMB(ADJ_CV,            G(KC_C),                        TY_C,     TY_V) //*/
    /* VB   **/ COMB(ADJ_VB,            G(KC_V),                        TY_V,     TY_B) //*/
    /* NM   **/ COMB(ADJ_NM,            KC_MINS,                        TY_N,     TY_M) //*/
    /* M,   **/ COMB(ADJ_MCOMM,         KC_UNDS,                        TY_M,     TY_COMM) //*/
    /* ,.   **/ COMB(ADJ_COMMDOT,       KC_CAPS,                        TY_COMM,  TY_DOT) //*/
    /* ./   **/ SUBS(ADJ_DOTSLSH,       "../",                          TY_DOT,   TY_SLSH) //*/

    /// vertical

    /* QA   **/ COMB(ADJ_QA,            KC_EXLM,                        TY_Q,     TY_A) //*/
    /* WS   **/ COMB(ADJ_WS,            KC_AT,                          TY_W,     TY_S) //*/
    /* ED   **/ COMB(ADJ_ED,            KC_HASH,                        TY_E,     TY_D) //*/
    /* RF   **/ COMB(ADJ_RF,            KC_DLR,                         TY_R,     TY_F) //*/
    /* TG   **/ COMB(ADJ_TG,            KC_PERC,                        TY_T,     TY_G) //*/
    /* YH   **/ COMB(ADJ_YH,            KC_CIRC,                        TY_Y,     TY_H) //*/
    /* UJ   **/ COMB(ADJ_UJ,            KC_AMPR,                        TY_U,     TY_J) //*/
    /* IK   **/ COMB(ADJ_IK,            KC_ASTR,                        TY_I,     TY_K) //*/
    /* OL   **/ COMB(ADJ_OL,            KC_GRV,                         TY_O,     TY_L) //*/
    /* P;   **/ COMB(ADJ_PSCLS,         KC_BSLS,                        TY_P,     TY_SCLN) //*/
    /* AZ     / COMB(ADJ_AZ,            arg,                            TY_A,     TY_Z) //*/
    /* SX     / COMB(ADJ_SX,            arg,                            TY_S,     TY_X) //*/
    /* DC     / COMB(ADJ_DC,            arg,                            TY_D,     TY_C) //*/
    /* FV     / COMB(ADJ_FV,            arg,                            TY_F,     TY_V) //*/
    /* GB     / COMB(ADJ_GB,            arg,                            TY_G,     TY_B) //*/
    /* HN   **/ COMB(ADJ_HN,            KC_PLUS,                        TY_H,     TY_N) //*/
    /* JM   **/ COMB(ADJ_JM,            KC_EQL,                         TY_J,     TY_M) //*/
    /* K,     / COMB(ADJ_KCOMM,         arg,                            TY_K,     TY_COMM) //*/
    /* L.     / COMB(ADJ_LDOT,          arg,                            TY_L,     TY_DOT) //*/
    /* ;/   **/ SUBS(ADJ_SCLNSLSH,      "://",                          TY_SCLN,  TY_SLSH) //*/

// dot combos
    /* Q     / COMB(DOT_KY_Q,           arg,                            TY_DOT,     TY_Q) //*/
    /* W   **/ SUBS(DOT_KY_W,           "www.",                         TY_DOT,     TY_W) //*/
    /* E   **/ COMB(DOT_KY_E,           "LGTM",                         TY_DOT,     TY_E) //*/
    /* R   **/ SUBS(DOT_KY_R,           ".org",                         TY_DOT,     TY_R) //*/
    /* T   **/ SUBS(DOT_KY_T,           ".net",                         TY_DOT,     TY_T) //*/
    /* Y     / COMB(DOT_KY_Y,           arg,                            TY_DOT,     TY_Y) //*/
    /* U     / COMB(DOT_KY_U,           arg,                            TY_DOT,     TY_U) //*/
    /* I     / COMB(DOT_KY_I,           arg,                            TY_DOT,     TY_I) //*/
    /* O     / COMB(DOT_KY_O,           arg,                            TY_DOT,     TY_O) //*/
    /* P     / COMB(DOT_KY_P,           arg,                            TY_DOT,     TY_P) //*/
    /* A     / COMB(DOT_KY_A,           arg,                            TY_DOT,     TY_A) //*/
    /* S   **/ COMB(DOT_KY_S,           "is:unread",                    TY_DOT,     TY_S) //*/
    /* D     / COMB(DOT_KY_D,           arg,                            TY_DOT,     TY_D) //*/
    /* F     / COMB(DOT_KY_F,           arg,                            TY_DOT,     TY_F) //*/
    /* G   **/ SUBS(DOT_KY_G,           "google",                       TY_DOT,     TY_G) //*/
    /* H     / COMB(DOT_KY_H,           arg,                            TY_DOT,     TY_H) //*/
    /* J     / COMB(DOT_KY_J,           arg,                            TY_DOT,     TY_J) //*/
    /* K     / COMB(DOT_KY_K,           arg,                            TY_DOT,     TY_K) //*/
    /* L     / COMB(DOT_KY_L,           arg,                            TY_DOT,     TY_L) //*/
    /* ;     / COMB(DOT_KY_SCLN,        arg,                            TY_DOT,     TY_SCLN) //*/
    /* Z     / COMB(DOT_KY_Z,           arg,                            TY_DOT,     TY_Z) //*/
    /* X     / COMB(DOT_KY_X,           arg,                            TY_DOT,     TY_X) //*/
    /* C   **/ SUBS(DOT_KY_C,           ".com",                         TY_DOT,     TY_C) //*/
    /* V   **/ SUBS(DOT_KY_V,           ".gov",                         TY_DOT,     TY_V) //*/
    /* B     / COMB(DOT_KY_B,           arg,                            TY_DOT,     TY_B) //*/
    /* N     / COMB(DOT_KY_N,           arg,                            TY_DOT,     TY_N) //*/
    /* M     / COMB(DOT_KY_M,           arg,                            TY_DOT,     TY_M) //*/
    /* ,     / COMB(DOT_KY_COMM,        arg,                            TY_DOT,     TY_COMM) //*/
    /* . self/ COMB(DOT_KY_DOT,         arg,                            TY_DOT,     TY_DOT) //*/
    /* /     / COMB(DOT_KY_SLSH,        arg,                            TY_DOT,     TY_SLSH) //*/

// slash combos
    /* Q   **/ SUBS(SLSH_KY_Q,          "day",                         TY_SLSH,    TY_Q) //*/
    /* W   **/ SUBS(SLSH_KY_W,          "week",                        TY_SLSH,    TY_W) //*/
    /* E   **/ SUBS(SLSH_KY_E,          "month",                       TY_SLSH,    TY_E) //*/
    /* R   **/ SUBS(SLSH_KY_R,          "year",                        TY_SLSH,    TY_R) //*/
    /* T   **/ SUBS(SLSH_KY_T,          "today",                       TY_SLSH,    TY_T) //*/
    /* Y   **/ SUBS(SLSH_KY_Y,          "yesterday",                   TY_SLSH,    TY_Y) //*/
    /* U     / SUBS(SLSH_KY_U,          "",                            TY_SLSH,    TY_U) //*/
    /* I   **/ SUBS(SLSH_KY_I,          "this",                        TY_SLSH,    TY_I) //*/
    /* O     / SUBS(SLSH_KY_O,          "",                            TY_SLSH,    TY_O) //*/
    /* P     / SUBS(SLSH_KY_P,          "",                            TY_SLSH,    TY_P) //*/
    /* A   **/ SUBS(SLSH_KY_A,          "Mon",                         TY_SLSH,    TY_A) //*/
    /* S   **/ SUBS(SLSH_KY_S,          "Tue",                         TY_SLSH,    TY_S) //*/
    /* D   **/ SUBS(SLSH_KY_D,          "Wed",                         TY_SLSH,    TY_D) //*/
    /* F   **/ SUBS(SLSH_KY_F,          "Thu",                         TY_SLSH,    TY_F) //*/
    /* G   **/ SUBS(SLSH_KY_G,          "Fri",                         TY_SLSH,    TY_G) //*/
    /* H   **/ SUBS(SLSH_KY_H,          "Sat",                         TY_SLSH,    TY_H) //*/
    /* J   **/ SUBS(SLSH_KY_J,          "Sun",                         TY_SLSH,    TY_J) //*/
    /* K   **/ SUBS(SLSH_KY_K,          "next",                        TY_SLSH,    TY_K) //*/
    /* L     / COMB(SLSH_KY_L,          SH_TG,                         TY_SLSH,    TY_L) //*/ // TODO: Test swap hands, does not work in Sol3
    /* ; adj / SUBS(SLSH_KY_SCLN,       "://",                         TY_SLSH,    TY_SCLN) //*/
    /* Z   **/ SUBS(SLSH_KY_Z,          "Monday",                      TY_SLSH,    TY_Z) //*/
    /* X   **/ SUBS(SLSH_KY_X,          "Tuesday",                     TY_SLSH,    TY_X) //*/
    /* C   **/ SUBS(SLSH_KY_C,          "Wednesday",                   TY_SLSH,    TY_C) //*/
    /* V   **/ SUBS(SLSH_KY_V,          "Thursday",                    TY_SLSH,    TY_V) //*/
    /* B   **/ SUBS(SLSH_KY_B,          "Friday",                      TY_SLSH,    TY_B) //*/
    /* N   **/ SUBS(SLSH_KY_N,          "Saturday",                    TY_SLSH,    TY_N) //*/
    /* M   **/ SUBS(SLSH_KY_M,          "Sunday",                      TY_SLSH,    TY_M) //*/
    /* ,   **/ SUBS(SLSH_KY_COMM,       "last",                        TY_SLSH,    TY_COMM) //*/
    /* . adj / SUBS(SLSH_KY_DOT,        "../",                         TY_SLSH,    TY_DOT) //*/
    /* / self/ SUBS(SLSH_KY_SLSH,       "",                            TY_SLSH,    TY_SLSH) //*/
    /* L1  **/ SUBS(SLSH_R1,            "morning",                     TY_SLSH,    TY_THUMB_R1) //*/
    /* L2  **/ SUBS(SLSH_R2,            "afternoon",                   TY_SLSH,    TY_THUMB_R2) //*/
    /* L3  **/ SUBS(SLSH_R3,            "night",                       TY_SLSH,    TY_THUMB_R3) //*/

// semicolon combos
    /* Q   **/ SUBS(SCLN_KY_Q,          ":wq",                         TY_SCLN,    TY_Q) //*/
    /* W   **/ SUBS(SCLN_KY_W,          ":w",                          TY_SCLN,    TY_W) //*/
    /* E     / COMB(SCLN_KY_E,          arg,                           TY_SCLN,    TY_E) //*/
    /* R     / COMB(SCLN_KY_R,          arg,                           TY_SCLN,    TY_R) //*/
    /* T     / COMB(SCLN_KY_T,          arg,                           TY_SCLN,    TY_T) //*/
    /* Y     / COMB(SCLN_KY_Y,          arg,                           TY_SCLN,    TY_Y) //*/
    /* U     / COMB(SCLN_KY_U,          arg,                           TY_SCLN,    TY_U) //*/
    /* I     / COMB(SCLN_KY_I,          arg,                           TY_SCLN,    TY_I) //*/
    /* O   **/ TOGG(SCLN_KY_O,          TY_QWERTY,                     TY_SCLN,    TY_O) //*/
    /* P adj / COMB(SCLN_KY_P,          arg,                           TY_SCLN,    TY_P) //*/
    /* A     / COMB(SCLN_KY_A,          arg,                           TY_SCLN,    TY_A) //*/
    /* S   **/ SUBS(SCLN_KY_S,          ":s/",                         TY_SCLN,    TY_S) //*/
    /* D     / COMB(SCLN_KY_D,          arg,                           TY_SCLN,    TY_D) //*/
    /* F     / COMB(SCLN_KY_F,          arg,                           TY_SCLN,    TY_F) //*/
    /* G     / COMB(SCLN_KY_G,          arg,                           TY_SCLN,    TY_G) //*/
    /* H   **/ TOGG(SCLN_KY_H,          TY_CONTROLS,                   TY_SCLN,    TY_H) //*/
    /* J   **/ TOGG(SCLN_KY_J,          TY_CODING,                     TY_SCLN,    TY_J) //*/
    /* K   **/ TOGG(SCLN_KY_K,          TY_NUMBERS,                    TY_SCLN,    TY_K) //*/
    /* L adj / COMB(SCLN_KY_L,          arg,                           TY_SCLN,    TY_L) //*/
    /* ; self/ COMB(SCLN_KY_SCLN,       arg,                           TY_SCLN,    TY_SCLN) //*/
    /* Z     / COMB(SCLN_KY_Z,          arg,                           TY_SCLN,    TY_Z) //*/
    /* X     / COMB(SCLN_KY_X,          arg,                           TY_SCLN,    TY_X) //*/
    /* C     / COMB(SCLN_KY_C,          arg,                           TY_SCLN,    TY_C) //*/
    /* V     / COMB(SCLN_KY_V,          arg,                           TY_SCLN,    TY_V) //*/
    /* B     / COMB(SCLN_KY_B,          arg,                           TY_SCLN,    TY_B) //*/
    /* N     / COMB(SCLN_KY_N,          arg,                           TY_SCLN,    TY_N) //*/
    /* M     / COMB(SCLN_KY_M,          arg,                           TY_SCLN,    TY_M) //*/
    /* ,     / COMB(SCLN_KY_COMM,       arg,                           TY_SCLN,    TY_COMM) //*/ // TODO: Activate Caps Word
    /* .   **/ COMB(SCLN_KY_DOT,        KC_CAPS,                       TY_SCLN,    TY_DOT) //*/
    /* / adj / COMB(SCLN_KY_SLSH,       arg,                           TY_SCLN,    TY_SLSH) //*/

// two-alpha combos: words/phrases
    SUBS(_ACH,              "chain",                                TY_A,       TY_C,       TY_H)
    SUBS(_ADR,              "address",                              TY_A,       TY_D,       TY_R)
    SUBS(_AEF,              "after",                                TY_A,       TY_E,       TY_F)
    SUBS(_ALR,              "alert",                                TY_A,       TY_L,       TY_R)
    SUBS(_APW,              "WhatsApp",                             TY_A,       TY_P,       TY_W)
    SUBS(_AR,               "are",                                  TY_A,       TY_R)
    SUBS(_BCN,              "blockchain",                           TY_B,       TY_C,       TY_N)
    SUBS(_BDU,              "debug",                                TY_B,       TY_D,       TY_U)
    SUBS(_BFO,              "before",                               TY_B,       TY_F,       TY_O)
    SUBS(_BKL,              "block",                                TY_B,       TY_K,       TY_L)
    SUBS(_BMO,              "mobile",                               TY_B,       TY_M,       TY_O)
    SUBS(_BOR,              "browser",                              TY_B,       TY_O,       TY_R)
    SUBS(_CAL,              "calendar",                             TY_C,       TY_F,       TY_N)
    SUBS(_CFM,              "confirm",                              TY_C,       TY_F,       TY_M)
    SUBS(_CFN,              "Confluence",                           TY_C,       TY_F,       TY_N)
    SUBS(_CHL,              "channel",                              TY_C,       TY_H,       TY_L)
    SUBS(_CHS,              "schedule",                             TY_C,       TY_H,       TY_S)
    SUBS(_CNP,              "cryptocurrency",                       TY_A,       TY_C,       TY_H)
    SUBS(_CNU,              "currency",                             TY_C,       TY_N,       TY_U)
    SUBS(_CPN,              "specification",                        TY_C,       TY_P,       TY_N)
    SUBS(_CPS,              "spec",                                 TY_C,       TY_P,       TY_S)
    SUBS(_CPY,              "crypto",                               TY_C,       TY_P,       TY_Y)
    SUBS(_CSY,              "security",                             TY_C,       TY_S,       TY_Y)
    SUBS(_DG,               "Google Doc",                           TY_D,       TY_G)
    SUBS(_DLW,              "withdrawal",                           TY_D,       TY_L,       TY_W)
    SUBS(_DMN,              "documentation",                        TY_D,       TY_M,       TY_N)
    SUBS(_DMT,              "document",                             TY_D,       TY_M,       TY_T)
    SUBS(_DNP,              "production",                           TY_D,       TY_N,       TY_P)
    SUBS(_DOP,              "DevOps",                               TY_D,       TY_O,       TY_P)
    SUBS(_DPS,              "deposit",                              TY_D,       TY_P,       TY_S)
    SUBS(_DPT,              "product",                              TY_D,       TY_P,       TY_T)
    SUBS(_DPV,              "develop",                              TY_D,       TY_P,       TY_V)
    SUBS(_DSO,              "discord",                              TY_D,       TY_S,       TY_O)
    SUBS(_DSU,              "discuss",                              TY_D,       TY_S,       TY_U)
    SUBS(_DTY,              "yesterday",                            TY_D,       TY_T,       TY_Y)
    SUBS(_EHT,              "the",                                  TY_E,       TY_H,       TY_T)
    SUBS(_EKW,              "week",                                 TY_E,       TY_K,       TY_W)
    SUBS(_ELM,              "email",                                TY_E,       TY_L,       TY_M)
    SUBS(_EPS,              "especially",                           TY_E,       TY_P,       TY_S)
    SUBS(_ER,               "er",                                   TY_E,       TY_R)
    SUBS(_ES,               "es",                                   TY_E,       TY_S)
    SUBS(_FL,               "ful",                                  TY_F,       TY_L)
    SUBS(_FUN,              "function",                             TY_F,       TY_U,       TY_N)
    SUBS(_GE,               "Google",                               TY_G,       TY_E)
    SUBS(_GC,               "Google Calendar",                      TY_G,       TY_C)
    SUBS(_GHU,              "github",                               TY_G,       TY_H,       TY_U)
    SUBS(_GL,               "Google Slide",                         TY_G,       TY_L)
    SUBS(_GPR,              "group",                                TY_G,       TY_P,       TY_R)
    SUBS(_GS,               "Google Sheet",                         TY_G,       TY_S)
    SUBS(_HAT,              "that",                                 TY_H,       TY_A,       TY_T)
    SUBS(_HIT,              "this",                                 TY_H,       TY_I,       TY_T)
    SUBS(_IGN,              "ing",                                  TY_I,       TY_G,       TY_N)
    SUBS(_IKT,              "ticket",                               TY_I,       TY_K,       TY_T)
    SUBS(_IM,               "I'm",                                  TY_I,       TY_M)
    SUBS(_IN,               "in",                                   TY_I,       TY_N
    SUBS(_INO,              "ion",                                  TY_I,       TY_N,       TY_O)
    SUBS(_IS,               "is",                                   TY_I,       TY_S)
    SUBS(_ISU,              "issue",                                TY_I,       TY_S,       TY_U)
    SUBS(_KLS,              "slack",                                TY_K,       TY_L,       TY_S)
    SUBS(_LTW,              "wallet",                               TY_L,       TY_T,       TY_W)
    SUBS(_MGS,              "message",                              TY_M,       TY_G,       TY_S)
    SUBS(_MNT,              "monitor",                              TY_M,       TY_N,       TY_T)
    SUBS(_MTZ,              "timezone",                             TY_M,       TY_T,       TY_Z)
    SUBS(_NFT,              "NFT",                                  TY_N,       TY_F,       TY_T)
    SUBS(_NST,              "staging",                              TY_N,       TY_S,       TY_T)
    SUBS(_NSV,              "version",                              TY_N,       TY_S,       TY_V)
    SUBS(_ON,               "on",                                   TY_O,       TY_N)
    SUBS(_OR,               "or",                                   TY_O,       TY_R)
    SUBS(_OU,               "you",                                  TY_O,       TY_U)
    SUBS(_PS,               "please",                               TY_P,       TY_S)
    SUBS(_PRS,              "spreadsheet",                          TY_P,       TY_R,       TY_S)
    SUBS(_RES,              "reset",                                TY_R,       TY_E,       TY_Sa
    SUBS(_RES_A,            "restart",                              TY_R,       TY_E,       TY_S,       TY_A)
    SUBS(_RES_H,            "research",                             TY_R,       TY_E,       TY_S,       TY_H)
    SUBS(_RES_I,            "restrict",                             TY_R,       TY_E,       TY_S,       TY_I)
    SUBS(_RES_L,            "reschedule",                           TY_R,       TY_E,       TY_S,       TY_L)
    SUBS(_RES_M,            "resume",                               TY_R,       TY_E,       TY_S,       TY_M)
    SUBS(_RES_N,            "resolution",                           TY_R,       TY_E,       TY_S,       TY_N)
    SUBS(_RES_O,            "resolve",                              TY_R,       TY_E,       TY_S,       TY_O)
    SUBS(_RES_U,            "result",                               TY_R,       TY_E,       TY_S,       TY_U)
    SUBS(_RY,               "you're",                               TY_R,       TY_Y)
    SUBS(_TLM,              "telegram",                             TY_T,       TY_L,       TY_M)
    SUBS(_TOD,              "today",                                TY_T,       TY_O,       TY_D)

// Z-three-key combos: phrases / replies
    SUBS(_ZFN,              "friendly reminder",                    TY_Z,       TY_F,       TY_N)
    SUBS(_ZGO,              "got it",                               TY_Z,       TY_G,       TY_O)
    SUBS(_ZKL,              "looking into it now",                  TY_Z,       TY_K,       TY_L)
    SUBS(_ZMO,              "next month",                           TY_Z,       TY_M,       TY_O)
    SUBS(_ZRY,              "next year",                            TY_Z,       TY_R,       TY_Y)
    SUBS(_ZWK,              "next week",                            TY_Z,       TY_W,       TY_K)

// X combos: words with X or sounds of X in them
    SUBS(_XCH,              "exchange",                             TY_X,       TY_C,       TY_H)
    SUBS(_XCN,              "transaction",                          TY_X,       TY_C,       TY_N)
    SUBS(_XF,               "transfer",                             TY_X,       TY_F)
    SUBS(_XFI,              "fix",                                  TY_X,       TY_F,       TY_I)
    SUBS(_XN,               "next",                                 TY_X,       TY_N)

// ZX combos: phrases with "thanks" or common replies
    SUBS(_ZXC,              "please check your calendar, thanks",   TY_Z,       TY_X,       TY_C)
    SUBS(_ZXG,              "got it, thanks",                       TY_Z,       TY_X,       TY_G)
    SUBS(_ZXI,              "invite sent",                          TY_Z,       TY_X,       TY_G)
    SUBS(_ZXK,              "thanks",                               TY_Z,       TY_X,       TY_K)
    SUBS(_ZXL,              "please check your email, thanks",      TY_Z,       TY_X,       TY_L)
    SUBS(_ZXM,              "many thanks",                          TY_Z,       TY_X,       TY_M)
    SUBS(_ZXO,              "ok, thanks",                           TY_Z,       TY_X,       TY_O)
    SUBS(_ZXP,              "approved, thanks",                     TY_Z,       TY_X,       TY_P)
    SUBS(_ZXV,              "please review, thanks",                TY_Z,       TY_X,       TY_V)
